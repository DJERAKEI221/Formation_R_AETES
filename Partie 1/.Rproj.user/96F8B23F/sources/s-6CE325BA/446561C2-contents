
# Librairie 

Sys.setlocale("LC_ALL", "fr_FR.UTF-8")

library(readr)
library(haven)
library(tidyverse)
library(questionr)
library(stringr)
library(DescTools)
library(ggplot2)
library(labelled)
library(foreign)
library(dplyr)
library(stringr)
library(forcats)
library(cowplot)
library(haven)
library(GGally)
library(gtsummary)
library(explor)
library(GDAtools)
library(survey)
library(sf)


# Répertoire de travail

setwd ("C:/Users/yvesd/Desktop/ISE1/Stat descriptives")

# Charger la bibliothèque haven
library(haven)

# Importer le fichier Stata
analyse <- read_dta("C:/Users/yvesd/Desktop/ISE1/Stat descriptives/base_stats.dta")

# Convertir toutes les variables en facteur avec leurs labels
analyse <- analyse %>% mutate(across(everything(), as_factor))

# Vérifier le résultat
str(analyse)
View(analyse)



library(dplyr)
library(stringr)

# Recodage de la variable "region"

# Afficher les modalités d'une variable (par exemple, "nom_variable")
levels(base_stats$region)

analyse <- analyse %>%
  mutate(region = if_else(region == "thi\xe8s", "Thiès", region))

analyse <- analyse %>%
  mutate(region = str_to_title(region))



View(analyse)



# Labelliser les modalités
#analyse <- analyse %>%
# mutate(etat_matri_mere = factor(etat_matri_mere,
#                                  levels = c(0, 1, 2, 3, 4, 5),
#                                  labels = c("Célibataire", "Mariée", "Vit en union libre", 
#                                             "Veuve", "Divorcée", "Séparée")))

# Pour recoder la modalité 12.9166669845581 dans la catégorie "Moins de 19 ans"

#analyse <- analyse %>%
#  mutate(age_naissance_gp = recode(age_naissance_gp, 
#                                   `12.9166669845581` = "Moins de 19 ans"))

describe(analyse$age_naissance_gp)




ggplot(analyse) +
  aes(
    x = niveau_ins_mere, fill = etat_nutritionnel, by = niveau_ins_mere, y = after_stat(prop),
    label = scales::percent(after_stat(prop), accuracy = 1), weight = poids
  ) +
  geom_bar(stat = "prop", position = position_dodge(0.9)) +
  geom_text(
    aes(y = after_stat(prop) - .005), stat = "prop",
    position = position_dodge(.9), vjust = "top", color = "white"
  ) +
  scale_y_continuous(labels = scales::percent) +
  scale_colour_manual(values = c("#837CCC","#AA3377"))+
  labs(x = "", y = "", fill = "État nutritionnel") +
  theme(legend.position = "top")+
  theme_bw()+scale_fill_manual(values = c("#006400","#AA3377"))


ggplot(analyse) +
  aes(
    x = age_enfant, fill = etat_nutritionnel, by = age_enfant, y = after_stat(prop),
    label = scales::percent(after_stat(prop), accuracy = 1), weight = poids
  ) +
  geom_bar(stat = "prop", position = position_dodge(0.9)) +
  geom_text(
    aes(y = after_stat(prop) - .005), stat = "prop",
    position = position_dodge(.9), vjust = "top", color = "white"
  ) +
  scale_y_continuous(labels = scales::percent) +
  scale_colour_manual(values = c("#837CCC","#AA3377"))+
  labs(x = "", y = "", fill = "État nutritionnel") +
  theme(legend.position = "top")+
  theme_bw()+scale_fill_manual(values = c("#006400","#AA3377"))





install.packages("foreign")
library(foreign)

write.dta(analyse, "datafile_rapport.dta")

write_sav(analyse, "datafile_rapport.sav")



analyse <- read.spss("datafile_rapport.sav", use.value.labels = TRUE, to.data.frame = TRUE)
View(analyse)
ggplot(analyse) +
  aes(
    x = taille_menage, fill = etat_nutritionnel, by = taille_menage, y = after_stat(prop),
    label = scales::percent(after_stat(prop), accuracy = 1), weight = poids
  ) +
  geom_bar(stat = "prop", position = position_dodge(0.9)) +
  geom_text(
    aes(y = after_stat(prop) - .005), stat = "prop",
    position = position_dodge(.9), vjust = "top"
  ) +
  scale_y_continuous(labels = scales::percent) +
  scale_colour_manual(values = c("#837CCC","#AA3377"))+
  labs(x = "", y = "", fill = "État nutritionnel") +
  theme(legend.position = "top")+
  theme_bw()+scale_fill_manual(values = c( "#837CCC","#AA3377" ))




ggplot(analyse, aes(x = niveau_vie ,fill = etat_nutritionnel)) + 
  geom_bar(position = "fill") + 
  geom_text(aes(by = niveau_vie,label = scales::percent(after_stat(prop), accuracy = 1)), stat = "prop", position = position_fill(.5))+
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + labs(x = "", y = "", fill = "") +
  theme(axis.text.x = element_text(angle =45 , margin = margin(t = 30 ,"pt")))+
  theme_bw()+scale_fill_manual(values = c( "#4477AA","#AA3377" ))



ggplot(analyse, aes(x = region, fill = etat_nutritionnel)) + 
  geom_bar(position = "fill") + 
  geom_text(
    aes(by = region, label = scales::percent(after_stat(prop), accuracy = 1)), 
    stat = "prop", 
    position = position_fill(0.5)
  ) +
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + 
  labs(x = "", y = "", fill = "") +
  theme(
    axis.text.x = element_text(angle = 45, margin = margin(t = 30, "pt"))
  ) +
  theme_bw() +
  scale_fill_manual(values = c("#4477AA", "#AA3377")) +
  

ggplot(analyse, aes(x = num_ordre_naissance ,fill = etat_nutritionnel)) + 
  gecoord_flip()
om_bar(position = "fill") + 
  geom_text(aes(by = num_ordre_naissance,label = scales::percent(after_stat(prop), accuracy = 1)), stat = "prop", position = position_fill(.5))+
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + labs(x = "", y = "", fill = "") +
  theme(axis.text.x = element_text(angle =45 , margin = margin(t = 30 ,"pt")))+
  theme_bw()+scale_fill_manual(values = c( "#32CD32","#AA3377" ))


ggplot(analyse, aes(x = source_eau_grp ,fill = etat_nutritionnel)) + 
  geom_bar(position = "fill") + 
  geom_text(aes(by = source_eau_grp,label = scales::percent(after_stat(prop), accuracy = 1)), stat = "prop", position = position_fill(.5))+
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + labs(x = "", y = "", fill = "") +
  theme(axis.text.x = element_text(angle =45 , margin = margin(t = 30 ,"pt")))+
  theme_bw()+scale_fill_manual(values = c( "#32CD32","#AA3377" ))+
  coord_flip()

ggplot(analyse, aes(x = sexe_enfant ,fill = etat_nutritionnel)) + 
  geom_bar(position = "fill") + 
  geom_text(aes(by = sexe_enfant,label = scales::percent(after_stat(prop), accuracy = 1)), stat = "prop", position = position_fill(.5))+
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + labs(x = "", y = "", fill = "") +
  theme(axis.text.x = element_text(angle =45 , margin = margin(t = 30 ,"pt")))+
  theme_bw()+scale_fill_manual(values = c( "#32CD32","#AA3377" ))


























analyse %>%
  tbl_cross(
    row = sexe_enfant,
    col = etat_nutritionnel,
    percent = "row"
  ) %>%
  add_p()

analyse %>%
  tbl_cross(
    row = age_enfant,
    col = etat_nutritionnel,
    percent = "row"
  ) %>%
  add_p()
analyse %>%
  tbl_cross(
    row = age_enfant,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      age_enfant = "Âge de l'enfant",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>%
  bold_labels() # Met les étiquettes en gras


Sys.setlocale("LC_ALL", "fr_FR.UTF-8")

analyse %>%
  tbl_cross(
    row = sexe_enfant,
    col = etat_nutritionnel,
    percent = "row"
  ) %>%
  add_p()
analyse %>%
  tbl_cross(
    row = sexe_enfant,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      sexe_enfant = "Sexe de l'enfant",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>%
  bold_labels() # Met les étiquettes en gras




analyse %>%
  tbl_cross(
    row = couv_san,
    col = etat_nutritionnel,
    percent = "row"
  ) %>%
  add_p()
analyse %>%
  tbl_cross(
    row = couv_san,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      couv_san = "Couverture santé",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>%
  bold_labels() # Met les étiquettes en gras


analyse %>%
  tbl_cross(
    row = milieu,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      age_enfant = "Milieu",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>%
  bold_labels()


analyse %>%
  tbl_cross(
    row = etat_matri_mere,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      etat_matri_mere = "Situation matrimoniale",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>% 
  bold_labels()


analyse %>%
  tbl_cross(
    row = sexe_enfant,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      sexe_enfant = "Sexe de l'enfant",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**", # En-tête pour les étiquettes
    stat_0 = "**Pourcentage**", # En-tête pour les statistiques
    p.value = "**p-valeur**" # En-tête pour les p-values
  ) %>% 
  bold_labels()




library(gtsummary)

analyse %>%
  tbl_cross(
    row = age_naissance_gp,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      etat_nutritionnel = "État nutritionnel",
      age_naissance_gp = "Âge de la mère"
    )
  ) %>%
  modify_header(
    label = "**Variables**",       # En-tête pour les variables
    stat_0 = "**Pourcentage**",    # En-tête pour les pourcentages
  ) %>%
  bold_labels()  # Met les étiquettes en gras

# Appliquer le test exact de Fisher avec simulation de la p-valeur
fisher_test_result <- fisher.test(table(analyse$age_naissance_gp, analyse$etat_nutritionnel), simulate.p.value = TRUE)

# Vérifier la p-valeur simulée
#fisher_test_result$p.value

fisher_test_result2 <- chisq.test(table(analyse$num_ordre_naissance, analyse$etat_nutritionnel), simulate.p.value = TRUE)
# Vérifier la p-valeur simulée
#fisher_test_result2$p.value

fisher_test_result3 <- chisq.test(table(analyse$niveau_ins_mere, analyse$etat_nutritionnel), simulate.p.value = TRUE)

fisher_test_result4 <- chisq.test(table(analyse$niveau_vie, analyse$etat_nutritionnel), simulate.p.value = TRUE)

fisher_test_result5 <- chisq.test(table(analyse$taille_menage, analyse$etat_nutritionnel), simulate.p.value = TRUE)

fisher_test_result6 <- chisq.test(table(analyse$source_eau_grp, analyse$etat_nutritionnel), simulate.p.value = TRUE)




library(survey)
library(gtsummary)

# Définir un design d'enquête avec les poids
design <- svydesign(ids = ~1, data = analyse, weights = ~poids)

# Créer un tableau résumé pondéré
tableau_gtsummary <- 
  tbl_svysummary(
    design,
    by = "etat_nutritionnel",
    label = list(
      num_ordre_naissance ~ "Ordre de naissance"
    ),
    statistic = list(all_categorical() ~ "{n} ({p}%)"), # Affiche n et %
    missing = "no" # Exclure les valeurs manquantes
  ) %>%
  modify_header(label ~ "**Variable**") %>%
  modify_caption("**Tableau pondéré des proportions par état nutritionnel**")

# Affichage du tableau
tableau_gtsummary





 #Définir le design avec pondération
design <- svydesign(ids = ~1, data = analyse, weights = ~poids)

# Test du Khi-2 pondéré pour la variable retard_croissance
khi2_test <- svychisq(~retard_croissance + etat_nutritionnel, design = design)



# Calcul du test du Khi-deux
test_khi2 <- chisq.test(table(analyse$sexe_enfant, analyse$etat_nutritionnel))

# Extraction de la p-valeur
p_value <- test_khi2$p.value

# Création du graphique avec l'annotation de la p-valeur
ggplot(analyse, aes(x = sexe_enfant, fill = etat_nutritionnel)) +  
  geom_bar(position = "fill") + 
  geom_text(
    aes(
      by = sexe_enfant,
      label = scales::percent(after_stat(prop), accuracy = 1)
    ), 
    stat = "prop", 
    position = position_fill(.5)
  ) +
  labs(fill = "Pratique du sport") +
  scale_y_continuous(labels = scales::percent) + 
  labs(x = "", y = "", fill = "") +
  theme(axis.text.x = element_text(angle = 45, margin = margin(t = 30, "pt"))) +
  theme_bw() +
  scale_fill_manual(values = c("#32CD32", "#AA3377")) +
  annotate(
    "text", 
    x = 1.5, # Position x de l'annotation
    y = 2, # Position y de l'annotation
    label = paste0("P-valeur du test du khi-deux= ", format(p_value, digits = 3)), # Texte de l'annotation
    color = "black", 
    size = 5
  )




library(dplyr)
library(forcats)






























library(dplyr)
library(gtsummary)
library(dplyr)
library(gtsummary)
library(scales)

analyse %>%
  tbl_cross(
    row = age_enfant,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      age_enfant = "Âge de l'enfant",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**",       # En-tête pour les variables
    stat_0 = "**Pourcentage**",    # En-tête pour les pourcentages
    p.value = "**p-valeur**"       # En-tête pour les p-values
  ) %>%
  modify_table_styling(
    columns = starts_with("stat_"), # Choisir les colonnes à formater
    rows = everything(),
    fmt_fun = scales::label_number(big.mark = " ", decimal.mark = ",") # Formatage des nombres
  ) %>%
  bold_labels() # Met les étiquettes en gras



library(dplyr)
library(gtsummary)

analyse %>%
  tbl_cross(
    row = sexe_enfant,
    col = etat_nutritionnel,
    percent = "row",
    label = list(
      sexe_enfant = "Sexe de l'enfant",
      etat_nutritionnel = "État nutritionnel"
    )
  ) %>%
  add_p() %>%
  modify_header(
    label = "**Variables**",
    stat_0 = "**Pourcentage**",
    p.value = "**p-valeur**"
  ) %>%
  bold_labels()



